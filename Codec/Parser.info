-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.4 from Parser.y
-----------------------------------------------------------------------------

state 185 contains 1 shift/reduce conflicts.
state 191 contains 2 reduce/reduce conflicts.
state 192 contains 2 reduce/reduce conflicts.
state 194 contains 9 shift/reduce conflicts.

terminal star is unused
terminal plus is unused
terminal rangle is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> 'TPTP_file'                        (0)
	'TPTP_file' -> many('TPTP_input')                  (1)
	'TPTP_input' -> 'annotated_formula'                (2)
	'TPTP_input' -> 'include'                          (3)
	'annotated_formula' -> 'fof_annotated'             (4)
	'annotated_formula' -> 'cnf_annotated'             (5)
	'fof_annotated' -> fof lp 'name' comma 'formula_role' comma 'fof_formula' 'annotations' rp dot   (6)
	'cnf_annotated' -> cnf lp 'name' comma 'formula_role' comma 'cnf_formula' 'annotations' rp dot   (7)
	'annotations' -> comma 'source' 'optional_info'    (8)
	'annotations' -> 'null'                            (9)
	'formula_role' -> lower_word                       (10)
	'fof_formula' -> 'binary_formula'                  (11)
	'fof_formula' -> 'unitary_formula'                 (12)
	'binary_formula' -> 'nonassoc_binary'              (13)
	'binary_formula' -> 'assoc_binary'                 (14)
	'nonassoc_binary' -> 'unitary_formula' 'binary_connective' 'unitary_formula'   (15)
	'assoc_binary' -> 'or_formula'                     (16)
	'assoc_binary' -> 'and_formula'                    (17)
	'or_formula' -> 'unitary_formula' vline 'unitary_formula' many('more_or_formula')   (18)
	'more_or_formula' -> vline 'unitary_formula'       (19)
	'and_formula' -> 'unitary_formula' ampersand 'unitary_formula' many('more_and_formula')   (20)
	'more_and_formula' -> ampersand 'unitary_formula'   (21)
	'unitary_formula' -> 'quantified_formula'          (22)
	'unitary_formula' -> 'unary_formula'               (23)
	'unitary_formula' -> 'atomic_formula'              (24)
	'unitary_formula' -> lp 'fof_formula' rp           (25)
	'quantified_formula' -> 'quantifier' lbra 'variable_list' rbra colon 'unitary_formula'   (26)
	'variable_list' -> 'variable'                      (27)
	'variable_list' -> 'variable' comma 'variable_list'   (28)
	'unary_formula' -> 'unary_connective' 'unitary_formula'   (29)
	'unary_formula' -> 'fol_infix_unary'               (30)
	'cnf_formula' -> lp 'disjunction' rp               (31)
	'cnf_formula' -> 'disjunction'                     (32)
	'disjunction' -> 'literal' many('more_disjunction')   (33)
	'more_disjunction' -> vline 'literal'              (34)
	'literal' -> 'atomic_formula'                      (35)
	'literal' -> tilde 'atomic_formula'                (36)
	'literal' -> 'fol_infix_unary'                     (37)
	'fol_infix_unary' -> 'term' 'infix_inequality' 'term'   (38)
	'quantifier' -> exclam                             (39)
	'quantifier' -> question                           (40)
	'binary_connective' -> iff                         (41)
	'binary_connective' -> implies                     (42)
	'binary_connective' -> impliedby                   (43)
	'binary_connective' -> xor                         (44)
	'binary_connective' -> nor                         (45)
	'binary_connective' -> nand                        (46)
	'unary_connective' -> tilde                        (47)
	'atomic_formula' -> 'plain_atomic_formula'         (48)
	'atomic_formula' -> 'defined_atomic_formula'       (49)
	'atomic_formula' -> 'system_atomic_formula'        (50)
	'plain_atomic_formula' -> 'plain_term'             (51)
	'defined_atomic_formula' -> 'defined_plain_formula'   (52)
	'defined_atomic_formula' -> 'defined_infix_formula'   (53)
	'defined_plain_formula' -> 'defined_plain_term'    (54)
	'defined_infix_formula' -> 'term' 'defined_infix_pred' 'term'   (55)
	'defined_infix_pred' -> 'infix_equality'           (56)
	'infix_equality' -> equals                         (57)
	'infix_inequality' -> nequals                      (58)
	'system_atomic_formula' -> 'system_term'           (59)
	'term' -> 'function_term'                          (60)
	'term' -> 'variable'                               (61)
	'function_term' -> 'plain_term'                    (62)
	'function_term' -> 'defined_term'                  (63)
	'function_term' -> 'system_term'                   (64)
	'plain_term' -> 'constant'                         (65)
	'plain_term' -> 'functor' lp 'arguments' rp        (66)
	'constant' -> 'functor'                            (67)
	'functor' -> 'atomic_word'                         (68)
	'defined_term' -> 'defined_atom'                   (69)
	'defined_term' -> 'defined_atomic_term'            (70)
	'defined_atom' -> 'number'                         (71)
	'defined_atom' -> distinct_object                  (72)
	'defined_atomic_term' -> 'defined_plain_term'      (73)
	'defined_plain_term' -> 'defined_constant'         (74)
	'defined_plain_term' -> 'defined_functor' lp 'arguments' rp   (75)
	'defined_constant' -> 'defined_functor'            (76)
	'defined_functor' -> 'atomic_defined_word'         (77)
	'system_term' -> 'system_constant'                 (78)
	'system_term' -> 'system_functor' lp 'arguments' rp   (79)
	'system_constant' -> 'system_functor'              (80)
	'system_functor' -> 'atomic_system_word'           (81)
	'variable' -> upper_word                           (82)
	'arguments' -> 'term'                              (83)
	'arguments' -> 'term' comma 'arguments'            (84)
	'source' -> 'general_term'                         (85)
	'optional_info' -> comma 'useful_info'             (86)
	'optional_info' -> 'null'                          (87)
	'useful_info' -> 'general_list'                    (88)
	'include' -> include lp 'file_name' 'formula_selection' rp dot   (89)
	'formula_selection' -> comma lbra 'name_list' rbra   (90)
	'formula_selection' -> 'null'                      (91)
	'name_list' -> 'name'                              (92)
	'name_list' -> 'name' comma 'name_list'            (93)
	'general_term' -> 'general_data'                   (94)
	'general_term' -> 'general_data' colon 'general_term'   (95)
	'general_term' ->                                  (96)
	'general_data' -> 'atomic_word'                    (97)
	'general_data' -> 'atomic_word' lp 'general_terms' rp   (98)
	'general_data' -> 'variable'                       (99)
	'general_data' -> 'number'                         (100)
	'general_data' -> distinct_object                  (101)
	'general_data' -> 'formula_data'                   (102)
	'formula_data' -> dollar_word lp 'fof_formula' rp   (103)
	'formula_data' -> dollar_word lp 'cnf_formula' rp   (104)
	'general_list' -> lbra rbra                        (105)
	'general_list' -> lbra 'general_terms' rbra        (106)
	'general_terms' -> 'general_term'                  (107)
	'general_terms' -> 'general_term' comma 'general_terms'   (108)
	'name' -> 'atomic_word'                            (109)
	'name' -> unsigned_integer                         (110)
	'atomic_word' -> lower_word                        (111)
	'atomic_word' -> single_quoted                     (112)
	'atomic_defined_word' -> dollar_word               (113)
	'atomic_system_word' -> dollar_dollar_word         (114)
	'number' -> real                                   (115)
	'number' -> signed_integer                         (116)
	'number' -> unsigned_integer                       (117)
	'file_name' -> single_quoted                       (118)
	'null' ->                                          (119)
	many('TPTP_input') ->                              (120)
	many('TPTP_input') -> 'TPTP_input' many('TPTP_input')   (121)
	many('more_and_formula') ->                        (122)
	many('more_and_formula') -> 'more_and_formula' many('more_and_formula')   (123)
	many('more_disjunction') ->                        (124)
	many('more_disjunction') -> 'more_disjunction' many('more_disjunction')   (125)
	many('more_or_formula') ->                         (126)
	many('more_or_formula') -> 'more_or_formula' many('more_or_formula')   (127)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	lp             { LP }
	rp             { RP }
	lbra           { Lbrack }
	rbra           { Rbrack }
	comma          { Comma }
	dot            { Dot }
	star           { Star }
	plus           { Plus }
	rangle         { Rangle }
	colon          { Op ":" }
	iff            { Op "<=>" }
	implies        { Op "=>" }
	xor            { Op "<~>" }
	nor            { Op "~|" }
	nand           { Op "~&" }
	impliedby      { Op "<=" }
	equals         { Op "=" }
	nequals        { Op "!=" }
	exclam         { Op "!" }
	question       { Op "?" }
	ampersand      { Op "&" }
	vline          { Op "|" }
	tilde          { Op "~" }
	fof            { LowerWord "fof" }
	cnf            { LowerWord "cnf" }
	include        { LowerWord "include" }
	single_quoted  { SingleQuoted $$ }
	distinct_object{ DoubleQuoted $$ }
	dollar_word    { DollarWord $$ }
	dollar_dollar_word{ DollarDollarWord $$ }
	upper_word     { UpperWord $$ }
	lower_word     { LowerWord $$ }
	signed_integer { SignedInt $$ }
	unsigned_integer{ UnsignedInt $$ }
	real           { Real $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	'TPTP_file'     rule  1
	'TPTP_input'    rules 2, 3
	'annotated_formula' rules 4, 5
	'fof_annotated' rule  6
	'cnf_annotated' rule  7
	'annotations'   rules 8, 9
	'formula_role'  rule  10
	'fof_formula'   rules 11, 12
	'binary_formula' rules 13, 14
	'nonassoc_binary' rule  15
	'assoc_binary'  rules 16, 17
	'or_formula'    rule  18
	'more_or_formula' rule  19
	'and_formula'   rule  20
	'more_and_formula' rule  21
	'unitary_formula' rules 22, 23, 24, 25
	'quantified_formula' rule  26
	'variable_list' rules 27, 28
	'unary_formula' rules 29, 30
	'cnf_formula'   rules 31, 32
	'disjunction'   rule  33
	'more_disjunction' rule  34
	'literal'       rules 35, 36, 37
	'fol_infix_unary' rule  38
	'quantifier'    rules 39, 40
	'binary_connective' rules 41, 42, 43, 44, 45, 46
	'unary_connective' rule  47
	'atomic_formula' rules 48, 49, 50
	'plain_atomic_formula' rule  51
	'defined_atomic_formula' rules 52, 53
	'defined_plain_formula' rule  54
	'defined_infix_formula' rule  55
	'defined_infix_pred' rule  56
	'infix_equality' rule  57
	'infix_inequality' rule  58
	'system_atomic_formula' rule  59
	'term'          rules 60, 61
	'function_term' rules 62, 63, 64
	'plain_term'    rules 65, 66
	'constant'      rule  67
	'functor'       rule  68
	'defined_term'  rules 69, 70
	'defined_atom'  rules 71, 72
	'defined_atomic_term' rule  73
	'defined_plain_term' rules 74, 75
	'defined_constant' rule  76
	'defined_functor' rule  77
	'system_term'   rules 78, 79
	'system_constant' rule  80
	'system_functor' rule  81
	'variable'      rule  82
	'arguments'     rules 83, 84
	'source'        rule  85
	'optional_info' rules 86, 87
	'useful_info'   rule  88
	'include'       rule  89
	'formula_selection' rules 90, 91
	'name_list'     rules 92, 93
	'general_term'  rules 94, 95, 96
	'general_data'  rules 97, 98, 99, 100, 101, 102
	'formula_data'  rules 103, 104
	'general_list'  rules 105, 106
	'general_terms' rules 107, 108
	'name'          rules 109, 110
	'atomic_word'   rules 111, 112
	'atomic_defined_word' rule  113
	'atomic_system_word' rule  114
	'number'        rules 115, 116, 117
	'file_name'     rule  118
	'null'          rule  119
	many('TPTP_input') rules 120, 121
	many('more_and_formula') rules 122, 123
	many('more_disjunction') rules 124, 125
	many('more_or_formula') rules 126, 127

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	fof            shift, and enter state 8
	cnf            shift, and enter state 9
	include        shift, and enter state 10
	%eof           reduce using rule 120

	'TPTP_file'    goto state 11
	'TPTP_input'   goto state 2
	'annotated_formula'goto state 3
	'fof_annotated'goto state 4
	'cnf_annotated'goto state 5
	'include'      goto state 6
	many('TPTP_input')goto state 7

State 1


	fof            shift, and enter state 8
	cnf            shift, and enter state 9
	include        shift, and enter state 10

	'TPTP_input'   goto state 2
	'annotated_formula'goto state 3
	'fof_annotated'goto state 4
	'cnf_annotated'goto state 5
	'include'      goto state 6
	many('TPTP_input')goto state 7

State 2

	many('TPTP_input') -> 'TPTP_input' . many('TPTP_input')    (rule 121)

	fof            shift, and enter state 8
	cnf            shift, and enter state 9
	include        shift, and enter state 10
	%eof           reduce using rule 120

	'TPTP_input'   goto state 2
	'annotated_formula'goto state 3
	'fof_annotated'goto state 4
	'cnf_annotated'goto state 5
	'include'      goto state 6
	many('TPTP_input')goto state 15

State 3

	'TPTP_input' -> 'annotated_formula' .               (rule 2)

	fof            reduce using rule 2
	cnf            reduce using rule 2
	include        reduce using rule 2
	%eof           reduce using rule 2


State 4

	'annotated_formula' -> 'fof_annotated' .            (rule 4)

	fof            reduce using rule 4
	cnf            reduce using rule 4
	include        reduce using rule 4
	%eof           reduce using rule 4


State 5

	'annotated_formula' -> 'cnf_annotated' .            (rule 5)

	fof            reduce using rule 5
	cnf            reduce using rule 5
	include        reduce using rule 5
	%eof           reduce using rule 5


State 6

	'TPTP_input' -> 'include' .                         (rule 3)

	fof            reduce using rule 3
	cnf            reduce using rule 3
	include        reduce using rule 3
	%eof           reduce using rule 3


State 7

	'TPTP_file' -> many('TPTP_input') .                 (rule 1)

	%eof           reduce using rule 1


State 8

	'fof_annotated' -> fof . lp 'name' comma 'formula_role' comma 'fof_formula' 'annotations' rp dot    (rule 6)

	lp             shift, and enter state 14


State 9

	'cnf_annotated' -> cnf . lp 'name' comma 'formula_role' comma 'cnf_formula' 'annotations' rp dot    (rule 7)

	lp             shift, and enter state 13


State 10

	'include' -> include . lp 'file_name' 'formula_selection' rp dot    (rule 89)

	lp             shift, and enter state 12


State 11

	%start_parse -> 'TPTP_file' .                       (rule 0)

	%eof           accept


State 12

	'include' -> include lp . 'file_name' 'formula_selection' rp dot    (rule 89)

	single_quoted  shift, and enter state 23

	'file_name'    goto state 22

State 13

	'cnf_annotated' -> cnf lp . 'name' comma 'formula_role' comma 'cnf_formula' 'annotations' rp dot    (rule 7)

	single_quoted  shift, and enter state 18
	lower_word     shift, and enter state 19
	unsigned_integershift, and enter state 20

	'name'         goto state 21
	'atomic_word'  goto state 17

State 14

	'fof_annotated' -> fof lp . 'name' comma 'formula_role' comma 'fof_formula' 'annotations' rp dot    (rule 6)

	single_quoted  shift, and enter state 18
	lower_word     shift, and enter state 19
	unsigned_integershift, and enter state 20

	'name'         goto state 16
	'atomic_word'  goto state 17

State 15

	many('TPTP_input') -> 'TPTP_input' many('TPTP_input') .    (rule 121)

	%eof           reduce using rule 121


State 16

	'fof_annotated' -> fof lp 'name' . comma 'formula_role' comma 'fof_formula' 'annotations' rp dot    (rule 6)

	comma          shift, and enter state 28


State 17

	'name' -> 'atomic_word' .                           (rule 109)

	rbra           reduce using rule 109
	comma          reduce using rule 109


State 18

	'atomic_word' -> single_quoted .                    (rule 112)

	lp             reduce using rule 112
	rp             reduce using rule 112
	rbra           reduce using rule 112
	comma          reduce using rule 112
	colon          reduce using rule 112
	iff            reduce using rule 112
	implies        reduce using rule 112
	xor            reduce using rule 112
	nor            reduce using rule 112
	nand           reduce using rule 112
	impliedby      reduce using rule 112
	equals         reduce using rule 112
	nequals        reduce using rule 112
	ampersand      reduce using rule 112
	vline          reduce using rule 112


State 19

	'atomic_word' -> lower_word .                       (rule 111)

	lp             reduce using rule 111
	rp             reduce using rule 111
	rbra           reduce using rule 111
	comma          reduce using rule 111
	colon          reduce using rule 111
	iff            reduce using rule 111
	implies        reduce using rule 111
	xor            reduce using rule 111
	nor            reduce using rule 111
	nand           reduce using rule 111
	impliedby      reduce using rule 111
	equals         reduce using rule 111
	nequals        reduce using rule 111
	ampersand      reduce using rule 111
	vline          reduce using rule 111


State 20

	'name' -> unsigned_integer .                        (rule 110)

	rbra           reduce using rule 110
	comma          reduce using rule 110


State 21

	'cnf_annotated' -> cnf lp 'name' . comma 'formula_role' comma 'cnf_formula' 'annotations' rp dot    (rule 7)

	comma          shift, and enter state 27


State 22

	'include' -> include lp 'file_name' . 'formula_selection' rp dot    (rule 89)

	rp             reduce using rule 119
	comma          shift, and enter state 26

	'formula_selection'goto state 24
	'null'         goto state 25

State 23

	'file_name' -> single_quoted .                      (rule 118)

	rp             reduce using rule 118
	comma          reduce using rule 118


State 24

	'include' -> include lp 'file_name' 'formula_selection' . rp dot    (rule 89)

	rp             shift, and enter state 33


State 25

	'formula_selection' -> 'null' .                     (rule 91)

	rp             reduce using rule 91


State 26

	'formula_selection' -> comma . lbra 'name_list' rbra    (rule 90)

	lbra           shift, and enter state 32


State 27

	'cnf_annotated' -> cnf lp 'name' comma . 'formula_role' comma 'cnf_formula' 'annotations' rp dot    (rule 7)

	lower_word     shift, and enter state 30

	'formula_role' goto state 31

State 28

	'fof_annotated' -> fof lp 'name' comma . 'formula_role' comma 'fof_formula' 'annotations' rp dot    (rule 6)

	lower_word     shift, and enter state 30

	'formula_role' goto state 29

State 29

	'fof_annotated' -> fof lp 'name' comma 'formula_role' . comma 'fof_formula' 'annotations' rp dot    (rule 6)

	comma          shift, and enter state 38


State 30

	'formula_role' -> lower_word .                      (rule 10)

	comma          reduce using rule 10


State 31

	'cnf_annotated' -> cnf lp 'name' comma 'formula_role' . comma 'cnf_formula' 'annotations' rp dot    (rule 7)

	comma          shift, and enter state 37


State 32

	'formula_selection' -> comma lbra . 'name_list' rbra    (rule 90)

	single_quoted  shift, and enter state 18
	lower_word     shift, and enter state 19
	unsigned_integershift, and enter state 20

	'name_list'    goto state 35
	'name'         goto state 36
	'atomic_word'  goto state 17

State 33

	'include' -> include lp 'file_name' 'formula_selection' rp . dot    (rule 89)

	dot            shift, and enter state 34


State 34

	'include' -> include lp 'file_name' 'formula_selection' rp dot .    (rule 89)

	fof            reduce using rule 89
	cnf            reduce using rule 89
	include        reduce using rule 89
	%eof           reduce using rule 89


State 35

	'formula_selection' -> comma lbra 'name_list' . rbra    (rule 90)

	rbra           shift, and enter state 95


State 36

	'name_list' -> 'name' .                             (rule 92)
	'name_list' -> 'name' . comma 'name_list'           (rule 93)

	rbra           reduce using rule 92
	comma          shift, and enter state 94


State 37

	'cnf_annotated' -> cnf lp 'name' comma 'formula_role' comma . 'cnf_formula' 'annotations' rp dot    (rule 7)

	lp             shift, and enter state 92
	tilde          shift, and enter state 93
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'cnf_formula'  goto state 87
	'disjunction'  goto state 88
	'literal'      goto state 89
	'fol_infix_unary'goto state 90
	'atomic_formula'goto state 91
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 38

	'fof_annotated' -> fof lp 'name' comma 'formula_role' comma . 'fof_formula' 'annotations' rp dot    (rule 6)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'fof_formula'  goto state 39
	'binary_formula'goto state 40
	'nonassoc_binary'goto state 41
	'assoc_binary' goto state 42
	'or_formula'   goto state 43
	'and_formula'  goto state 44
	'unitary_formula'goto state 45
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 39

	'fof_annotated' -> fof lp 'name' comma 'formula_role' comma 'fof_formula' . 'annotations' rp dot    (rule 6)

	rp             reduce using rule 119
	comma          shift, and enter state 105

	'annotations'  goto state 126
	'null'         goto state 104

State 40

	'fof_formula' -> 'binary_formula' .                 (rule 11)

	rp             reduce using rule 11
	comma          reduce using rule 11


State 41

	'binary_formula' -> 'nonassoc_binary' .             (rule 13)

	rp             reduce using rule 13
	comma          reduce using rule 13


State 42

	'binary_formula' -> 'assoc_binary' .                (rule 14)

	rp             reduce using rule 14
	comma          reduce using rule 14


State 43

	'assoc_binary' -> 'or_formula' .                    (rule 16)

	rp             reduce using rule 16
	comma          reduce using rule 16


State 44

	'assoc_binary' -> 'and_formula' .                   (rule 17)

	rp             reduce using rule 17
	comma          reduce using rule 17


State 45

	'fof_formula' -> 'unitary_formula' .                (rule 12)
	'nonassoc_binary' -> 'unitary_formula' . 'binary_connective' 'unitary_formula'    (rule 15)
	'or_formula' -> 'unitary_formula' . vline 'unitary_formula' many('more_or_formula')    (rule 18)
	'and_formula' -> 'unitary_formula' . ampersand 'unitary_formula' many('more_and_formula')    (rule 20)

	rp             reduce using rule 12
	comma          reduce using rule 12
	iff            shift, and enter state 118
	implies        shift, and enter state 119
	xor            shift, and enter state 120
	nor            shift, and enter state 121
	nand           shift, and enter state 122
	impliedby      shift, and enter state 123
	ampersand      shift, and enter state 124
	vline          shift, and enter state 125

	'binary_connective'goto state 117

State 46

	'unitary_formula' -> 'quantified_formula' .         (rule 22)

	rp             reduce using rule 22
	comma          reduce using rule 22
	iff            reduce using rule 22
	implies        reduce using rule 22
	xor            reduce using rule 22
	nor            reduce using rule 22
	nand           reduce using rule 22
	impliedby      reduce using rule 22
	ampersand      reduce using rule 22
	vline          reduce using rule 22


State 47

	'unitary_formula' -> 'unary_formula' .              (rule 23)

	rp             reduce using rule 23
	comma          reduce using rule 23
	iff            reduce using rule 23
	implies        reduce using rule 23
	xor            reduce using rule 23
	nor            reduce using rule 23
	nand           reduce using rule 23
	impliedby      reduce using rule 23
	ampersand      reduce using rule 23
	vline          reduce using rule 23


State 48

	'unary_formula' -> 'fol_infix_unary' .              (rule 30)

	rp             reduce using rule 30
	comma          reduce using rule 30
	iff            reduce using rule 30
	implies        reduce using rule 30
	xor            reduce using rule 30
	nor            reduce using rule 30
	nand           reduce using rule 30
	impliedby      reduce using rule 30
	ampersand      reduce using rule 30
	vline          reduce using rule 30


State 49

	'quantified_formula' -> 'quantifier' . lbra 'variable_list' rbra colon 'unitary_formula'    (rule 26)

	lbra           shift, and enter state 116


State 50

	'unary_formula' -> 'unary_connective' . 'unitary_formula'    (rule 29)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'unitary_formula'goto state 115
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 51

	'unitary_formula' -> 'atomic_formula' .             (rule 24)

	rp             reduce using rule 24
	comma          reduce using rule 24
	iff            reduce using rule 24
	implies        reduce using rule 24
	xor            reduce using rule 24
	nor            reduce using rule 24
	nand           reduce using rule 24
	impliedby      reduce using rule 24
	ampersand      reduce using rule 24
	vline          reduce using rule 24


State 52

	'atomic_formula' -> 'plain_atomic_formula' .        (rule 48)

	rp             reduce using rule 48
	comma          reduce using rule 48
	iff            reduce using rule 48
	implies        reduce using rule 48
	xor            reduce using rule 48
	nor            reduce using rule 48
	nand           reduce using rule 48
	impliedby      reduce using rule 48
	ampersand      reduce using rule 48
	vline          reduce using rule 48


State 53

	'atomic_formula' -> 'defined_atomic_formula' .      (rule 49)

	rp             reduce using rule 49
	comma          reduce using rule 49
	iff            reduce using rule 49
	implies        reduce using rule 49
	xor            reduce using rule 49
	nor            reduce using rule 49
	nand           reduce using rule 49
	impliedby      reduce using rule 49
	ampersand      reduce using rule 49
	vline          reduce using rule 49


State 54

	'defined_atomic_formula' -> 'defined_plain_formula' .    (rule 52)

	rp             reduce using rule 52
	comma          reduce using rule 52
	iff            reduce using rule 52
	implies        reduce using rule 52
	xor            reduce using rule 52
	nor            reduce using rule 52
	nand           reduce using rule 52
	impliedby      reduce using rule 52
	ampersand      reduce using rule 52
	vline          reduce using rule 52


State 55

	'defined_atomic_formula' -> 'defined_infix_formula' .    (rule 53)

	rp             reduce using rule 53
	comma          reduce using rule 53
	iff            reduce using rule 53
	implies        reduce using rule 53
	xor            reduce using rule 53
	nor            reduce using rule 53
	nand           reduce using rule 53
	impliedby      reduce using rule 53
	ampersand      reduce using rule 53
	vline          reduce using rule 53


State 56

	'atomic_formula' -> 'system_atomic_formula' .       (rule 50)

	rp             reduce using rule 50
	comma          reduce using rule 50
	iff            reduce using rule 50
	implies        reduce using rule 50
	xor            reduce using rule 50
	nor            reduce using rule 50
	nand           reduce using rule 50
	impliedby      reduce using rule 50
	ampersand      reduce using rule 50
	vline          reduce using rule 50


State 57

	'fol_infix_unary' -> 'term' . 'infix_inequality' 'term'    (rule 38)
	'defined_infix_formula' -> 'term' . 'defined_infix_pred' 'term'    (rule 55)

	equals         shift, and enter state 113
	nequals        shift, and enter state 114

	'defined_infix_pred'goto state 110
	'infix_equality'goto state 111
	'infix_inequality'goto state 112

State 58

	'term' -> 'function_term' .                         (rule 60)

	rp             reduce using rule 60
	comma          reduce using rule 60
	iff            reduce using rule 60
	implies        reduce using rule 60
	xor            reduce using rule 60
	nor            reduce using rule 60
	nand           reduce using rule 60
	impliedby      reduce using rule 60
	equals         reduce using rule 60
	nequals        reduce using rule 60
	ampersand      reduce using rule 60
	vline          reduce using rule 60


State 59

	'plain_atomic_formula' -> 'plain_term' .            (rule 51)
	'function_term' -> 'plain_term' .                   (rule 62)

	rp             reduce using rule 51
	comma          reduce using rule 51
	iff            reduce using rule 51
	implies        reduce using rule 51
	xor            reduce using rule 51
	nor            reduce using rule 51
	nand           reduce using rule 51
	impliedby      reduce using rule 51
	equals         reduce using rule 62
	nequals        reduce using rule 62
	ampersand      reduce using rule 51
	vline          reduce using rule 51


State 60

	'plain_term' -> 'constant' .                        (rule 65)

	rp             reduce using rule 65
	comma          reduce using rule 65
	iff            reduce using rule 65
	implies        reduce using rule 65
	xor            reduce using rule 65
	nor            reduce using rule 65
	nand           reduce using rule 65
	impliedby      reduce using rule 65
	equals         reduce using rule 65
	nequals        reduce using rule 65
	ampersand      reduce using rule 65
	vline          reduce using rule 65


State 61

	'plain_term' -> 'functor' . lp 'arguments' rp       (rule 66)
	'constant' -> 'functor' .                           (rule 67)

	lp             shift, and enter state 109
	rp             reduce using rule 67
	comma          reduce using rule 67
	iff            reduce using rule 67
	implies        reduce using rule 67
	xor            reduce using rule 67
	nor            reduce using rule 67
	nand           reduce using rule 67
	impliedby      reduce using rule 67
	equals         reduce using rule 67
	nequals        reduce using rule 67
	ampersand      reduce using rule 67
	vline          reduce using rule 67


State 62

	'function_term' -> 'defined_term' .                 (rule 63)

	rp             reduce using rule 63
	comma          reduce using rule 63
	iff            reduce using rule 63
	implies        reduce using rule 63
	xor            reduce using rule 63
	nor            reduce using rule 63
	nand           reduce using rule 63
	impliedby      reduce using rule 63
	equals         reduce using rule 63
	nequals        reduce using rule 63
	ampersand      reduce using rule 63
	vline          reduce using rule 63


State 63

	'defined_term' -> 'defined_atom' .                  (rule 69)

	rp             reduce using rule 69
	comma          reduce using rule 69
	iff            reduce using rule 69
	implies        reduce using rule 69
	xor            reduce using rule 69
	nor            reduce using rule 69
	nand           reduce using rule 69
	impliedby      reduce using rule 69
	equals         reduce using rule 69
	nequals        reduce using rule 69
	ampersand      reduce using rule 69
	vline          reduce using rule 69


State 64

	'defined_term' -> 'defined_atomic_term' .           (rule 70)

	rp             reduce using rule 70
	comma          reduce using rule 70
	iff            reduce using rule 70
	implies        reduce using rule 70
	xor            reduce using rule 70
	nor            reduce using rule 70
	nand           reduce using rule 70
	impliedby      reduce using rule 70
	equals         reduce using rule 70
	nequals        reduce using rule 70
	ampersand      reduce using rule 70
	vline          reduce using rule 70


State 65

	'defined_plain_formula' -> 'defined_plain_term' .    (rule 54)
	'defined_atomic_term' -> 'defined_plain_term' .     (rule 73)

	rp             reduce using rule 54
	comma          reduce using rule 54
	iff            reduce using rule 54
	implies        reduce using rule 54
	xor            reduce using rule 54
	nor            reduce using rule 54
	nand           reduce using rule 54
	impliedby      reduce using rule 54
	equals         reduce using rule 73
	nequals        reduce using rule 73
	ampersand      reduce using rule 54
	vline          reduce using rule 54


State 66

	'defined_plain_term' -> 'defined_constant' .        (rule 74)

	rp             reduce using rule 74
	comma          reduce using rule 74
	iff            reduce using rule 74
	implies        reduce using rule 74
	xor            reduce using rule 74
	nor            reduce using rule 74
	nand           reduce using rule 74
	impliedby      reduce using rule 74
	equals         reduce using rule 74
	nequals        reduce using rule 74
	ampersand      reduce using rule 74
	vline          reduce using rule 74


State 67

	'defined_plain_term' -> 'defined_functor' . lp 'arguments' rp    (rule 75)
	'defined_constant' -> 'defined_functor' .           (rule 76)

	lp             shift, and enter state 108
	rp             reduce using rule 76
	comma          reduce using rule 76
	iff            reduce using rule 76
	implies        reduce using rule 76
	xor            reduce using rule 76
	nor            reduce using rule 76
	nand           reduce using rule 76
	impliedby      reduce using rule 76
	equals         reduce using rule 76
	nequals        reduce using rule 76
	ampersand      reduce using rule 76
	vline          reduce using rule 76


State 68

	'system_atomic_formula' -> 'system_term' .          (rule 59)
	'function_term' -> 'system_term' .                  (rule 64)

	rp             reduce using rule 59
	comma          reduce using rule 59
	iff            reduce using rule 59
	implies        reduce using rule 59
	xor            reduce using rule 59
	nor            reduce using rule 59
	nand           reduce using rule 59
	impliedby      reduce using rule 59
	equals         reduce using rule 64
	nequals        reduce using rule 64
	ampersand      reduce using rule 59
	vline          reduce using rule 59


State 69

	'system_term' -> 'system_constant' .                (rule 78)

	rp             reduce using rule 78
	comma          reduce using rule 78
	iff            reduce using rule 78
	implies        reduce using rule 78
	xor            reduce using rule 78
	nor            reduce using rule 78
	nand           reduce using rule 78
	impliedby      reduce using rule 78
	equals         reduce using rule 78
	nequals        reduce using rule 78
	ampersand      reduce using rule 78
	vline          reduce using rule 78


State 70

	'system_term' -> 'system_functor' . lp 'arguments' rp    (rule 79)
	'system_constant' -> 'system_functor' .             (rule 80)

	lp             shift, and enter state 107
	rp             reduce using rule 80
	comma          reduce using rule 80
	iff            reduce using rule 80
	implies        reduce using rule 80
	xor            reduce using rule 80
	nor            reduce using rule 80
	nand           reduce using rule 80
	impliedby      reduce using rule 80
	equals         reduce using rule 80
	nequals        reduce using rule 80
	ampersand      reduce using rule 80
	vline          reduce using rule 80


State 71

	'term' -> 'variable' .                              (rule 61)

	rp             reduce using rule 61
	comma          reduce using rule 61
	iff            reduce using rule 61
	implies        reduce using rule 61
	xor            reduce using rule 61
	nor            reduce using rule 61
	nand           reduce using rule 61
	impliedby      reduce using rule 61
	equals         reduce using rule 61
	nequals        reduce using rule 61
	ampersand      reduce using rule 61
	vline          reduce using rule 61


State 72

	'functor' -> 'atomic_word' .                        (rule 68)

	lp             reduce using rule 68
	rp             reduce using rule 68
	comma          reduce using rule 68
	iff            reduce using rule 68
	implies        reduce using rule 68
	xor            reduce using rule 68
	nor            reduce using rule 68
	nand           reduce using rule 68
	impliedby      reduce using rule 68
	equals         reduce using rule 68
	nequals        reduce using rule 68
	ampersand      reduce using rule 68
	vline          reduce using rule 68


State 73

	'defined_functor' -> 'atomic_defined_word' .        (rule 77)

	lp             reduce using rule 77
	rp             reduce using rule 77
	comma          reduce using rule 77
	iff            reduce using rule 77
	implies        reduce using rule 77
	xor            reduce using rule 77
	nor            reduce using rule 77
	nand           reduce using rule 77
	impliedby      reduce using rule 77
	equals         reduce using rule 77
	nequals        reduce using rule 77
	ampersand      reduce using rule 77
	vline          reduce using rule 77


State 74

	'system_functor' -> 'atomic_system_word' .          (rule 81)

	lp             reduce using rule 81
	rp             reduce using rule 81
	comma          reduce using rule 81
	iff            reduce using rule 81
	implies        reduce using rule 81
	xor            reduce using rule 81
	nor            reduce using rule 81
	nand           reduce using rule 81
	impliedby      reduce using rule 81
	equals         reduce using rule 81
	nequals        reduce using rule 81
	ampersand      reduce using rule 81
	vline          reduce using rule 81


State 75

	'defined_atom' -> 'number' .                        (rule 71)

	rp             reduce using rule 71
	comma          reduce using rule 71
	iff            reduce using rule 71
	implies        reduce using rule 71
	xor            reduce using rule 71
	nor            reduce using rule 71
	nand           reduce using rule 71
	impliedby      reduce using rule 71
	equals         reduce using rule 71
	nequals        reduce using rule 71
	ampersand      reduce using rule 71
	vline          reduce using rule 71


State 76

	'unitary_formula' -> lp . 'fof_formula' rp          (rule 25)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'fof_formula'  goto state 106
	'binary_formula'goto state 40
	'nonassoc_binary'goto state 41
	'assoc_binary' goto state 42
	'or_formula'   goto state 43
	'and_formula'  goto state 44
	'unitary_formula'goto state 45
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 77

	'quantifier' -> exclam .                            (rule 39)

	lbra           reduce using rule 39


State 78

	'quantifier' -> question .                          (rule 40)

	lbra           reduce using rule 40


State 79

	'unary_connective' -> tilde .                       (rule 47)

	lp             reduce using rule 47
	exclam         reduce using rule 47
	question       reduce using rule 47
	tilde          reduce using rule 47
	single_quoted  reduce using rule 47
	distinct_objectreduce using rule 47
	dollar_word    reduce using rule 47
	dollar_dollar_wordreduce using rule 47
	upper_word     reduce using rule 47
	lower_word     reduce using rule 47
	signed_integer reduce using rule 47
	unsigned_integerreduce using rule 47
	real           reduce using rule 47


State 80

	'defined_atom' -> distinct_object .                 (rule 72)

	rp             reduce using rule 72
	comma          reduce using rule 72
	iff            reduce using rule 72
	implies        reduce using rule 72
	xor            reduce using rule 72
	nor            reduce using rule 72
	nand           reduce using rule 72
	impliedby      reduce using rule 72
	equals         reduce using rule 72
	nequals        reduce using rule 72
	ampersand      reduce using rule 72
	vline          reduce using rule 72


State 81

	'atomic_defined_word' -> dollar_word .              (rule 113)

	lp             reduce using rule 113
	rp             reduce using rule 113
	comma          reduce using rule 113
	iff            reduce using rule 113
	implies        reduce using rule 113
	xor            reduce using rule 113
	nor            reduce using rule 113
	nand           reduce using rule 113
	impliedby      reduce using rule 113
	equals         reduce using rule 113
	nequals        reduce using rule 113
	ampersand      reduce using rule 113
	vline          reduce using rule 113


State 82

	'atomic_system_word' -> dollar_dollar_word .        (rule 114)

	lp             reduce using rule 114
	rp             reduce using rule 114
	comma          reduce using rule 114
	iff            reduce using rule 114
	implies        reduce using rule 114
	xor            reduce using rule 114
	nor            reduce using rule 114
	nand           reduce using rule 114
	impliedby      reduce using rule 114
	equals         reduce using rule 114
	nequals        reduce using rule 114
	ampersand      reduce using rule 114
	vline          reduce using rule 114


State 83

	'variable' -> upper_word .                          (rule 82)

	rp             reduce using rule 82
	rbra           reduce using rule 82
	comma          reduce using rule 82
	colon          reduce using rule 82
	iff            reduce using rule 82
	implies        reduce using rule 82
	xor            reduce using rule 82
	nor            reduce using rule 82
	nand           reduce using rule 82
	impliedby      reduce using rule 82
	equals         reduce using rule 82
	nequals        reduce using rule 82
	ampersand      reduce using rule 82
	vline          reduce using rule 82


State 84

	'number' -> signed_integer .                        (rule 116)

	rp             reduce using rule 116
	rbra           reduce using rule 116
	comma          reduce using rule 116
	colon          reduce using rule 116
	iff            reduce using rule 116
	implies        reduce using rule 116
	xor            reduce using rule 116
	nor            reduce using rule 116
	nand           reduce using rule 116
	impliedby      reduce using rule 116
	equals         reduce using rule 116
	nequals        reduce using rule 116
	ampersand      reduce using rule 116
	vline          reduce using rule 116


State 85

	'number' -> unsigned_integer .                      (rule 117)

	rp             reduce using rule 117
	rbra           reduce using rule 117
	comma          reduce using rule 117
	colon          reduce using rule 117
	iff            reduce using rule 117
	implies        reduce using rule 117
	xor            reduce using rule 117
	nor            reduce using rule 117
	nand           reduce using rule 117
	impliedby      reduce using rule 117
	equals         reduce using rule 117
	nequals        reduce using rule 117
	ampersand      reduce using rule 117
	vline          reduce using rule 117


State 86

	'number' -> real .                                  (rule 115)

	rp             reduce using rule 115
	rbra           reduce using rule 115
	comma          reduce using rule 115
	colon          reduce using rule 115
	iff            reduce using rule 115
	implies        reduce using rule 115
	xor            reduce using rule 115
	nor            reduce using rule 115
	nand           reduce using rule 115
	impliedby      reduce using rule 115
	equals         reduce using rule 115
	nequals        reduce using rule 115
	ampersand      reduce using rule 115
	vline          reduce using rule 115


State 87

	'cnf_annotated' -> cnf lp 'name' comma 'formula_role' comma 'cnf_formula' . 'annotations' rp dot    (rule 7)

	rp             reduce using rule 119
	comma          shift, and enter state 105

	'annotations'  goto state 103
	'null'         goto state 104

State 88

	'cnf_formula' -> 'disjunction' .                    (rule 32)

	rp             reduce using rule 32
	comma          reduce using rule 32


State 89

	'disjunction' -> 'literal' . many('more_disjunction')    (rule 33)

	rp             reduce using rule 124
	comma          reduce using rule 124
	vline          shift, and enter state 102

	'more_disjunction'goto state 100
	many('more_disjunction')goto state 101

State 90

	'literal' -> 'fol_infix_unary' .                    (rule 37)

	rp             reduce using rule 37
	comma          reduce using rule 37
	vline          reduce using rule 37


State 91

	'literal' -> 'atomic_formula' .                     (rule 35)

	rp             reduce using rule 35
	comma          reduce using rule 35
	vline          reduce using rule 35


State 92

	'cnf_formula' -> lp . 'disjunction' rp              (rule 31)

	tilde          shift, and enter state 93
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'disjunction'  goto state 99
	'literal'      goto state 89
	'fol_infix_unary'goto state 90
	'atomic_formula'goto state 91
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 93

	'literal' -> tilde . 'atomic_formula'               (rule 36)

	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'atomic_formula'goto state 97
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 98
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 94

	'name_list' -> 'name' comma . 'name_list'           (rule 93)

	single_quoted  shift, and enter state 18
	lower_word     shift, and enter state 19
	unsigned_integershift, and enter state 20

	'name_list'    goto state 96
	'name'         goto state 36
	'atomic_word'  goto state 17

State 95

	'formula_selection' -> comma lbra 'name_list' rbra .    (rule 90)

	rp             reduce using rule 90


State 96

	'name_list' -> 'name' comma 'name_list' .           (rule 93)

	rbra           reduce using rule 93


State 97

	'literal' -> tilde 'atomic_formula' .               (rule 36)

	rp             reduce using rule 36
	comma          reduce using rule 36
	vline          reduce using rule 36


State 98

	'defined_infix_formula' -> 'term' . 'defined_infix_pred' 'term'    (rule 55)

	equals         shift, and enter state 113

	'defined_infix_pred'goto state 110
	'infix_equality'goto state 111

State 99

	'cnf_formula' -> lp 'disjunction' . rp              (rule 31)

	rp             shift, and enter state 155


State 100

	many('more_disjunction') -> 'more_disjunction' . many('more_disjunction')    (rule 125)

	rp             reduce using rule 124
	comma          reduce using rule 124
	vline          shift, and enter state 102

	'more_disjunction'goto state 100
	many('more_disjunction')goto state 154

State 101

	'disjunction' -> 'literal' many('more_disjunction') .    (rule 33)

	rp             reduce using rule 33
	comma          reduce using rule 33


State 102

	'more_disjunction' -> vline . 'literal'             (rule 34)

	tilde          shift, and enter state 93
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'literal'      goto state 153
	'fol_infix_unary'goto state 90
	'atomic_formula'goto state 91
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 103

	'cnf_annotated' -> cnf lp 'name' comma 'formula_role' comma 'cnf_formula' 'annotations' . rp dot    (rule 7)

	rp             shift, and enter state 152


State 104

	'annotations' -> 'null' .                           (rule 9)

	rp             reduce using rule 9


State 105

	'annotations' -> comma . 'source' 'optional_info'    (rule 8)

	rp             reduce using rule 96
	comma          reduce using rule 96
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 150
	dollar_word    shift, and enter state 151
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'variable'     goto state 143
	'source'       goto state 144
	'general_term' goto state 145
	'general_data' goto state 146
	'formula_data' goto state 147
	'atomic_word'  goto state 148
	'number'       goto state 149

State 106

	'unitary_formula' -> lp 'fof_formula' . rp          (rule 25)

	rp             shift, and enter state 142


State 107

	'system_term' -> 'system_functor' lp . 'arguments' rp    (rule 79)

	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'term'         goto state 138
	'function_term'goto state 58
	'plain_term'   goto state 134
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 135
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 136
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'arguments'    goto state 141
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 108

	'defined_plain_term' -> 'defined_functor' lp . 'arguments' rp    (rule 75)

	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'term'         goto state 138
	'function_term'goto state 58
	'plain_term'   goto state 134
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 135
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 136
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'arguments'    goto state 140
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 109

	'plain_term' -> 'functor' lp . 'arguments' rp       (rule 66)

	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'term'         goto state 138
	'function_term'goto state 58
	'plain_term'   goto state 134
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 135
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 136
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'arguments'    goto state 139
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 110

	'defined_infix_formula' -> 'term' 'defined_infix_pred' . 'term'    (rule 55)

	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'term'         goto state 137
	'function_term'goto state 58
	'plain_term'   goto state 134
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 135
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 136
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 111

	'defined_infix_pred' -> 'infix_equality' .          (rule 56)

	single_quoted  reduce using rule 56
	distinct_objectreduce using rule 56
	dollar_word    reduce using rule 56
	dollar_dollar_wordreduce using rule 56
	upper_word     reduce using rule 56
	lower_word     reduce using rule 56
	signed_integer reduce using rule 56
	unsigned_integerreduce using rule 56
	real           reduce using rule 56


State 112

	'fol_infix_unary' -> 'term' 'infix_inequality' . 'term'    (rule 38)

	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'term'         goto state 133
	'function_term'goto state 58
	'plain_term'   goto state 134
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 135
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 136
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 113

	'infix_equality' -> equals .                        (rule 57)

	single_quoted  reduce using rule 57
	distinct_objectreduce using rule 57
	dollar_word    reduce using rule 57
	dollar_dollar_wordreduce using rule 57
	upper_word     reduce using rule 57
	lower_word     reduce using rule 57
	signed_integer reduce using rule 57
	unsigned_integerreduce using rule 57
	real           reduce using rule 57


State 114

	'infix_inequality' -> nequals .                     (rule 58)

	single_quoted  reduce using rule 58
	distinct_objectreduce using rule 58
	dollar_word    reduce using rule 58
	dollar_dollar_wordreduce using rule 58
	upper_word     reduce using rule 58
	lower_word     reduce using rule 58
	signed_integer reduce using rule 58
	unsigned_integerreduce using rule 58
	real           reduce using rule 58


State 115

	'unary_formula' -> 'unary_connective' 'unitary_formula' .    (rule 29)

	rp             reduce using rule 29
	comma          reduce using rule 29
	iff            reduce using rule 29
	implies        reduce using rule 29
	xor            reduce using rule 29
	nor            reduce using rule 29
	nand           reduce using rule 29
	impliedby      reduce using rule 29
	ampersand      reduce using rule 29
	vline          reduce using rule 29


State 116

	'quantified_formula' -> 'quantifier' lbra . 'variable_list' rbra colon 'unitary_formula'    (rule 26)

	upper_word     shift, and enter state 83

	'variable_list'goto state 131
	'variable'     goto state 132

State 117

	'nonassoc_binary' -> 'unitary_formula' 'binary_connective' . 'unitary_formula'    (rule 15)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'unitary_formula'goto state 130
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 118

	'binary_connective' -> iff .                        (rule 41)

	lp             reduce using rule 41
	exclam         reduce using rule 41
	question       reduce using rule 41
	tilde          reduce using rule 41
	single_quoted  reduce using rule 41
	distinct_objectreduce using rule 41
	dollar_word    reduce using rule 41
	dollar_dollar_wordreduce using rule 41
	upper_word     reduce using rule 41
	lower_word     reduce using rule 41
	signed_integer reduce using rule 41
	unsigned_integerreduce using rule 41
	real           reduce using rule 41


State 119

	'binary_connective' -> implies .                    (rule 42)

	lp             reduce using rule 42
	exclam         reduce using rule 42
	question       reduce using rule 42
	tilde          reduce using rule 42
	single_quoted  reduce using rule 42
	distinct_objectreduce using rule 42
	dollar_word    reduce using rule 42
	dollar_dollar_wordreduce using rule 42
	upper_word     reduce using rule 42
	lower_word     reduce using rule 42
	signed_integer reduce using rule 42
	unsigned_integerreduce using rule 42
	real           reduce using rule 42


State 120

	'binary_connective' -> xor .                        (rule 44)

	lp             reduce using rule 44
	exclam         reduce using rule 44
	question       reduce using rule 44
	tilde          reduce using rule 44
	single_quoted  reduce using rule 44
	distinct_objectreduce using rule 44
	dollar_word    reduce using rule 44
	dollar_dollar_wordreduce using rule 44
	upper_word     reduce using rule 44
	lower_word     reduce using rule 44
	signed_integer reduce using rule 44
	unsigned_integerreduce using rule 44
	real           reduce using rule 44


State 121

	'binary_connective' -> nor .                        (rule 45)

	lp             reduce using rule 45
	exclam         reduce using rule 45
	question       reduce using rule 45
	tilde          reduce using rule 45
	single_quoted  reduce using rule 45
	distinct_objectreduce using rule 45
	dollar_word    reduce using rule 45
	dollar_dollar_wordreduce using rule 45
	upper_word     reduce using rule 45
	lower_word     reduce using rule 45
	signed_integer reduce using rule 45
	unsigned_integerreduce using rule 45
	real           reduce using rule 45


State 122

	'binary_connective' -> nand .                       (rule 46)

	lp             reduce using rule 46
	exclam         reduce using rule 46
	question       reduce using rule 46
	tilde          reduce using rule 46
	single_quoted  reduce using rule 46
	distinct_objectreduce using rule 46
	dollar_word    reduce using rule 46
	dollar_dollar_wordreduce using rule 46
	upper_word     reduce using rule 46
	lower_word     reduce using rule 46
	signed_integer reduce using rule 46
	unsigned_integerreduce using rule 46
	real           reduce using rule 46


State 123

	'binary_connective' -> impliedby .                  (rule 43)

	lp             reduce using rule 43
	exclam         reduce using rule 43
	question       reduce using rule 43
	tilde          reduce using rule 43
	single_quoted  reduce using rule 43
	distinct_objectreduce using rule 43
	dollar_word    reduce using rule 43
	dollar_dollar_wordreduce using rule 43
	upper_word     reduce using rule 43
	lower_word     reduce using rule 43
	signed_integer reduce using rule 43
	unsigned_integerreduce using rule 43
	real           reduce using rule 43


State 124

	'and_formula' -> 'unitary_formula' ampersand . 'unitary_formula' many('more_and_formula')    (rule 20)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'unitary_formula'goto state 129
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 125

	'or_formula' -> 'unitary_formula' vline . 'unitary_formula' many('more_or_formula')    (rule 18)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'unitary_formula'goto state 128
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 126

	'fof_annotated' -> fof lp 'name' comma 'formula_role' comma 'fof_formula' 'annotations' . rp dot    (rule 6)

	rp             shift, and enter state 127


State 127

	'fof_annotated' -> fof lp 'name' comma 'formula_role' comma 'fof_formula' 'annotations' rp . dot    (rule 6)

	dot            shift, and enter state 175


State 128

	'or_formula' -> 'unitary_formula' vline 'unitary_formula' . many('more_or_formula')    (rule 18)

	rp             reduce using rule 126
	comma          reduce using rule 126
	vline          shift, and enter state 174

	'more_or_formula'goto state 172
	many('more_or_formula')goto state 173

State 129

	'and_formula' -> 'unitary_formula' ampersand 'unitary_formula' . many('more_and_formula')    (rule 20)

	rp             reduce using rule 122
	comma          reduce using rule 122
	ampersand      shift, and enter state 171

	'more_and_formula'goto state 169
	many('more_and_formula')goto state 170

State 130

	'nonassoc_binary' -> 'unitary_formula' 'binary_connective' 'unitary_formula' .    (rule 15)

	rp             reduce using rule 15
	comma          reduce using rule 15


State 131

	'quantified_formula' -> 'quantifier' lbra 'variable_list' . rbra colon 'unitary_formula'    (rule 26)

	rbra           shift, and enter state 168


State 132

	'variable_list' -> 'variable' .                     (rule 27)
	'variable_list' -> 'variable' . comma 'variable_list'    (rule 28)

	rbra           reduce using rule 27
	comma          shift, and enter state 167


State 133

	'fol_infix_unary' -> 'term' 'infix_inequality' 'term' .    (rule 38)

	rp             reduce using rule 38
	comma          reduce using rule 38
	iff            reduce using rule 38
	implies        reduce using rule 38
	xor            reduce using rule 38
	nor            reduce using rule 38
	nand           reduce using rule 38
	impliedby      reduce using rule 38
	ampersand      reduce using rule 38
	vline          reduce using rule 38


State 134

	'function_term' -> 'plain_term' .                   (rule 62)

	rp             reduce using rule 62
	comma          reduce using rule 62
	iff            reduce using rule 62
	implies        reduce using rule 62
	xor            reduce using rule 62
	nor            reduce using rule 62
	nand           reduce using rule 62
	impliedby      reduce using rule 62
	ampersand      reduce using rule 62
	vline          reduce using rule 62


State 135

	'defined_atomic_term' -> 'defined_plain_term' .     (rule 73)

	rp             reduce using rule 73
	comma          reduce using rule 73
	iff            reduce using rule 73
	implies        reduce using rule 73
	xor            reduce using rule 73
	nor            reduce using rule 73
	nand           reduce using rule 73
	impliedby      reduce using rule 73
	ampersand      reduce using rule 73
	vline          reduce using rule 73


State 136

	'function_term' -> 'system_term' .                  (rule 64)

	rp             reduce using rule 64
	comma          reduce using rule 64
	iff            reduce using rule 64
	implies        reduce using rule 64
	xor            reduce using rule 64
	nor            reduce using rule 64
	nand           reduce using rule 64
	impliedby      reduce using rule 64
	ampersand      reduce using rule 64
	vline          reduce using rule 64


State 137

	'defined_infix_formula' -> 'term' 'defined_infix_pred' 'term' .    (rule 55)

	rp             reduce using rule 55
	comma          reduce using rule 55
	iff            reduce using rule 55
	implies        reduce using rule 55
	xor            reduce using rule 55
	nor            reduce using rule 55
	nand           reduce using rule 55
	impliedby      reduce using rule 55
	ampersand      reduce using rule 55
	vline          reduce using rule 55


State 138

	'arguments' -> 'term' .                             (rule 83)
	'arguments' -> 'term' . comma 'arguments'           (rule 84)

	rp             reduce using rule 83
	comma          shift, and enter state 166


State 139

	'plain_term' -> 'functor' lp 'arguments' . rp       (rule 66)

	rp             shift, and enter state 165


State 140

	'defined_plain_term' -> 'defined_functor' lp 'arguments' . rp    (rule 75)

	rp             shift, and enter state 164


State 141

	'system_term' -> 'system_functor' lp 'arguments' . rp    (rule 79)

	rp             shift, and enter state 163


State 142

	'unitary_formula' -> lp 'fof_formula' rp .          (rule 25)

	rp             reduce using rule 25
	comma          reduce using rule 25
	iff            reduce using rule 25
	implies        reduce using rule 25
	xor            reduce using rule 25
	nor            reduce using rule 25
	nand           reduce using rule 25
	impliedby      reduce using rule 25
	ampersand      reduce using rule 25
	vline          reduce using rule 25


State 143

	'general_data' -> 'variable' .                      (rule 99)

	rp             reduce using rule 99
	rbra           reduce using rule 99
	comma          reduce using rule 99
	colon          reduce using rule 99


State 144

	'annotations' -> comma 'source' . 'optional_info'    (rule 8)

	rp             reduce using rule 119
	comma          shift, and enter state 162

	'optional_info'goto state 160
	'null'         goto state 161

State 145

	'source' -> 'general_term' .                        (rule 85)

	rp             reduce using rule 85
	comma          reduce using rule 85


State 146

	'general_term' -> 'general_data' .                  (rule 94)
	'general_term' -> 'general_data' . colon 'general_term'    (rule 95)

	rp             reduce using rule 94
	rbra           reduce using rule 94
	comma          reduce using rule 94
	colon          shift, and enter state 159


State 147

	'general_data' -> 'formula_data' .                  (rule 102)

	rp             reduce using rule 102
	rbra           reduce using rule 102
	comma          reduce using rule 102
	colon          reduce using rule 102


State 148

	'general_data' -> 'atomic_word' .                   (rule 97)
	'general_data' -> 'atomic_word' . lp 'general_terms' rp    (rule 98)

	lp             shift, and enter state 158
	rp             reduce using rule 97
	rbra           reduce using rule 97
	comma          reduce using rule 97
	colon          reduce using rule 97


State 149

	'general_data' -> 'number' .                        (rule 100)

	rp             reduce using rule 100
	rbra           reduce using rule 100
	comma          reduce using rule 100
	colon          reduce using rule 100


State 150

	'general_data' -> distinct_object .                 (rule 101)

	rp             reduce using rule 101
	rbra           reduce using rule 101
	comma          reduce using rule 101
	colon          reduce using rule 101


State 151

	'formula_data' -> dollar_word . lp 'fof_formula' rp    (rule 103)
	'formula_data' -> dollar_word . lp 'cnf_formula' rp    (rule 104)

	lp             shift, and enter state 157


State 152

	'cnf_annotated' -> cnf lp 'name' comma 'formula_role' comma 'cnf_formula' 'annotations' rp . dot    (rule 7)

	dot            shift, and enter state 156


State 153

	'more_disjunction' -> vline 'literal' .             (rule 34)

	rp             reduce using rule 34
	comma          reduce using rule 34
	vline          reduce using rule 34


State 154

	many('more_disjunction') -> 'more_disjunction' many('more_disjunction') .    (rule 125)

	rp             reduce using rule 125
	comma          reduce using rule 125


State 155

	'cnf_formula' -> lp 'disjunction' rp .              (rule 31)

	rp             reduce using rule 31
	comma          reduce using rule 31


State 156

	'cnf_annotated' -> cnf lp 'name' comma 'formula_role' comma 'cnf_formula' 'annotations' rp dot .    (rule 7)

	fof            reduce using rule 7
	cnf            reduce using rule 7
	include        reduce using rule 7
	%eof           reduce using rule 7


State 157

	'formula_data' -> dollar_word lp . 'fof_formula' rp    (rule 103)
	'formula_data' -> dollar_word lp . 'cnf_formula' rp    (rule 104)

	lp             shift, and enter state 193
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 194
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'fof_formula'  goto state 189
	'binary_formula'goto state 40
	'nonassoc_binary'goto state 41
	'assoc_binary' goto state 42
	'or_formula'   goto state 43
	'and_formula'  goto state 44
	'unitary_formula'goto state 45
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'cnf_formula'  goto state 190
	'disjunction'  goto state 88
	'literal'      goto state 89
	'fol_infix_unary'goto state 191
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 192
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 158

	'general_data' -> 'atomic_word' lp . 'general_terms' rp    (rule 98)

	rp             reduce using rule 96
	comma          reduce using rule 96
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 150
	dollar_word    shift, and enter state 151
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'variable'     goto state 143
	'general_term' goto state 187
	'general_data' goto state 146
	'formula_data' goto state 147
	'general_terms'goto state 188
	'atomic_word'  goto state 148
	'number'       goto state 149

State 159

	'general_term' -> 'general_data' colon . 'general_term'    (rule 95)

	rp             reduce using rule 96
	rbra           reduce using rule 96
	comma          reduce using rule 96
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 150
	dollar_word    shift, and enter state 151
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'variable'     goto state 143
	'general_term' goto state 186
	'general_data' goto state 146
	'formula_data' goto state 147
	'atomic_word'  goto state 148
	'number'       goto state 149

State 160

	'annotations' -> comma 'source' 'optional_info' .    (rule 8)

	rp             reduce using rule 8


State 161

	'optional_info' -> 'null' .                         (rule 87)

	rp             reduce using rule 87


State 162

	'optional_info' -> comma . 'useful_info'            (rule 86)

	lbra           shift, and enter state 185

	'useful_info'  goto state 183
	'general_list' goto state 184

State 163

	'system_term' -> 'system_functor' lp 'arguments' rp .    (rule 79)

	rp             reduce using rule 79
	comma          reduce using rule 79
	iff            reduce using rule 79
	implies        reduce using rule 79
	xor            reduce using rule 79
	nor            reduce using rule 79
	nand           reduce using rule 79
	impliedby      reduce using rule 79
	equals         reduce using rule 79
	nequals        reduce using rule 79
	ampersand      reduce using rule 79
	vline          reduce using rule 79


State 164

	'defined_plain_term' -> 'defined_functor' lp 'arguments' rp .    (rule 75)

	rp             reduce using rule 75
	comma          reduce using rule 75
	iff            reduce using rule 75
	implies        reduce using rule 75
	xor            reduce using rule 75
	nor            reduce using rule 75
	nand           reduce using rule 75
	impliedby      reduce using rule 75
	equals         reduce using rule 75
	nequals        reduce using rule 75
	ampersand      reduce using rule 75
	vline          reduce using rule 75


State 165

	'plain_term' -> 'functor' lp 'arguments' rp .       (rule 66)

	rp             reduce using rule 66
	comma          reduce using rule 66
	iff            reduce using rule 66
	implies        reduce using rule 66
	xor            reduce using rule 66
	nor            reduce using rule 66
	nand           reduce using rule 66
	impliedby      reduce using rule 66
	equals         reduce using rule 66
	nequals        reduce using rule 66
	ampersand      reduce using rule 66
	vline          reduce using rule 66


State 166

	'arguments' -> 'term' comma . 'arguments'           (rule 84)

	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'term'         goto state 138
	'function_term'goto state 58
	'plain_term'   goto state 134
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 135
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 136
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'arguments'    goto state 182
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 167

	'variable_list' -> 'variable' comma . 'variable_list'    (rule 28)

	upper_word     shift, and enter state 83

	'variable_list'goto state 181
	'variable'     goto state 132

State 168

	'quantified_formula' -> 'quantifier' lbra 'variable_list' rbra . colon 'unitary_formula'    (rule 26)

	colon          shift, and enter state 180


State 169

	many('more_and_formula') -> 'more_and_formula' . many('more_and_formula')    (rule 123)

	rp             reduce using rule 122
	comma          reduce using rule 122
	ampersand      shift, and enter state 171

	'more_and_formula'goto state 169
	many('more_and_formula')goto state 179

State 170

	'and_formula' -> 'unitary_formula' ampersand 'unitary_formula' many('more_and_formula') .    (rule 20)

	rp             reduce using rule 20
	comma          reduce using rule 20


State 171

	'more_and_formula' -> ampersand . 'unitary_formula'    (rule 21)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'unitary_formula'goto state 178
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 172

	many('more_or_formula') -> 'more_or_formula' . many('more_or_formula')    (rule 127)

	rp             reduce using rule 126
	comma          reduce using rule 126
	vline          shift, and enter state 174

	'more_or_formula'goto state 172
	many('more_or_formula')goto state 177

State 173

	'or_formula' -> 'unitary_formula' vline 'unitary_formula' many('more_or_formula') .    (rule 18)

	rp             reduce using rule 18
	comma          reduce using rule 18


State 174

	'more_or_formula' -> vline . 'unitary_formula'      (rule 19)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'unitary_formula'goto state 176
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 175

	'fof_annotated' -> fof lp 'name' comma 'formula_role' comma 'fof_formula' 'annotations' rp dot .    (rule 6)

	fof            reduce using rule 6
	cnf            reduce using rule 6
	include        reduce using rule 6
	%eof           reduce using rule 6


State 176

	'more_or_formula' -> vline 'unitary_formula' .      (rule 19)

	rp             reduce using rule 19
	comma          reduce using rule 19
	vline          reduce using rule 19


State 177

	many('more_or_formula') -> 'more_or_formula' many('more_or_formula') .    (rule 127)

	rp             reduce using rule 127
	comma          reduce using rule 127


State 178

	'more_and_formula' -> ampersand 'unitary_formula' .    (rule 21)

	rp             reduce using rule 21
	comma          reduce using rule 21
	ampersand      reduce using rule 21


State 179

	many('more_and_formula') -> 'more_and_formula' many('more_and_formula') .    (rule 123)

	rp             reduce using rule 123
	comma          reduce using rule 123


State 180

	'quantified_formula' -> 'quantifier' lbra 'variable_list' rbra colon . 'unitary_formula'    (rule 26)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 79
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'unitary_formula'goto state 201
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'fol_infix_unary'goto state 48
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 51
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 181

	'variable_list' -> 'variable' comma 'variable_list' .    (rule 28)

	rbra           reduce using rule 28


State 182

	'arguments' -> 'term' comma 'arguments' .           (rule 84)

	rp             reduce using rule 84


State 183

	'optional_info' -> comma 'useful_info' .            (rule 86)

	rp             reduce using rule 86


State 184

	'useful_info' -> 'general_list' .                   (rule 88)

	rp             reduce using rule 88


State 185

	'general_list' -> lbra . rbra                       (rule 105)
	'general_list' -> lbra . 'general_terms' rbra       (rule 106)

	rbra           shift, and enter state 200
			(reduce using rule 96)

	comma          reduce using rule 96
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 150
	dollar_word    shift, and enter state 151
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'variable'     goto state 143
	'general_term' goto state 187
	'general_data' goto state 146
	'formula_data' goto state 147
	'general_terms'goto state 199
	'atomic_word'  goto state 148
	'number'       goto state 149

State 186

	'general_term' -> 'general_data' colon 'general_term' .    (rule 95)

	rp             reduce using rule 95
	rbra           reduce using rule 95
	comma          reduce using rule 95


State 187

	'general_terms' -> 'general_term' .                 (rule 107)
	'general_terms' -> 'general_term' . comma 'general_terms'    (rule 108)

	rp             reduce using rule 107
	rbra           reduce using rule 107
	comma          shift, and enter state 198


State 188

	'general_data' -> 'atomic_word' lp 'general_terms' . rp    (rule 98)

	rp             shift, and enter state 197


State 189

	'formula_data' -> dollar_word lp 'fof_formula' . rp    (rule 103)

	rp             shift, and enter state 196


State 190

	'formula_data' -> dollar_word lp 'cnf_formula' . rp    (rule 104)

	rp             shift, and enter state 195


State 191

	'unary_formula' -> 'fol_infix_unary' .              (rule 30)
	'literal' -> 'fol_infix_unary' .                    (rule 37)

	rp             reduce using rule 37
			(reduce using rule 30)

	iff            reduce using rule 30
	implies        reduce using rule 30
	xor            reduce using rule 30
	nor            reduce using rule 30
	nand           reduce using rule 30
	impliedby      reduce using rule 30
	ampersand      reduce using rule 30
	vline          reduce using rule 37
			(reduce using rule 30)



State 192

	'unitary_formula' -> 'atomic_formula' .             (rule 24)
	'literal' -> 'atomic_formula' .                     (rule 35)

	rp             reduce using rule 35
			(reduce using rule 24)

	iff            reduce using rule 24
	implies        reduce using rule 24
	xor            reduce using rule 24
	nor            reduce using rule 24
	nand           reduce using rule 24
	impliedby      reduce using rule 24
	ampersand      reduce using rule 24
	vline          reduce using rule 35
			(reduce using rule 24)



State 193

	'unitary_formula' -> lp . 'fof_formula' rp          (rule 25)
	'cnf_formula' -> lp . 'disjunction' rp              (rule 31)

	lp             shift, and enter state 76
	exclam         shift, and enter state 77
	question       shift, and enter state 78
	tilde          shift, and enter state 194
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 80
	dollar_word    shift, and enter state 81
	dollar_dollar_wordshift, and enter state 82
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'fof_formula'  goto state 106
	'binary_formula'goto state 40
	'nonassoc_binary'goto state 41
	'assoc_binary' goto state 42
	'or_formula'   goto state 43
	'and_formula'  goto state 44
	'unitary_formula'goto state 45
	'quantified_formula'goto state 46
	'unary_formula'goto state 47
	'disjunction'  goto state 99
	'literal'      goto state 89
	'fol_infix_unary'goto state 191
	'quantifier'   goto state 49
	'unary_connective'goto state 50
	'atomic_formula'goto state 192
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 57
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 194

	'literal' -> tilde . 'atomic_formula'               (rule 36)
	'unary_connective' -> tilde .                       (rule 47)

	lp             reduce using rule 47
	exclam         reduce using rule 47
	question       reduce using rule 47
	tilde          reduce using rule 47
	single_quoted  shift, and enter state 18
			(reduce using rule 47)

	distinct_objectshift, and enter state 80
			(reduce using rule 47)

	dollar_word    shift, and enter state 81
			(reduce using rule 47)

	dollar_dollar_wordshift, and enter state 82
			(reduce using rule 47)

	upper_word     shift, and enter state 83
			(reduce using rule 47)

	lower_word     shift, and enter state 19
			(reduce using rule 47)

	signed_integer shift, and enter state 84
			(reduce using rule 47)

	unsigned_integershift, and enter state 85
			(reduce using rule 47)

	real           shift, and enter state 86
			(reduce using rule 47)


	'atomic_formula'goto state 97
	'plain_atomic_formula'goto state 52
	'defined_atomic_formula'goto state 53
	'defined_plain_formula'goto state 54
	'defined_infix_formula'goto state 55
	'system_atomic_formula'goto state 56
	'term'         goto state 98
	'function_term'goto state 58
	'plain_term'   goto state 59
	'constant'     goto state 60
	'functor'      goto state 61
	'defined_term' goto state 62
	'defined_atom' goto state 63
	'defined_atomic_term'goto state 64
	'defined_plain_term'goto state 65
	'defined_constant'goto state 66
	'defined_functor'goto state 67
	'system_term'  goto state 68
	'system_constant'goto state 69
	'system_functor'goto state 70
	'variable'     goto state 71
	'atomic_word'  goto state 72
	'atomic_defined_word'goto state 73
	'atomic_system_word'goto state 74
	'number'       goto state 75

State 195

	'formula_data' -> dollar_word lp 'cnf_formula' rp .    (rule 104)

	rp             reduce using rule 104
	rbra           reduce using rule 104
	comma          reduce using rule 104
	colon          reduce using rule 104


State 196

	'formula_data' -> dollar_word lp 'fof_formula' rp .    (rule 103)

	rp             reduce using rule 103
	rbra           reduce using rule 103
	comma          reduce using rule 103
	colon          reduce using rule 103


State 197

	'general_data' -> 'atomic_word' lp 'general_terms' rp .    (rule 98)

	rp             reduce using rule 98
	rbra           reduce using rule 98
	comma          reduce using rule 98
	colon          reduce using rule 98


State 198

	'general_terms' -> 'general_term' comma . 'general_terms'    (rule 108)

	rp             reduce using rule 96
	rbra           reduce using rule 96
	comma          reduce using rule 96
	single_quoted  shift, and enter state 18
	distinct_objectshift, and enter state 150
	dollar_word    shift, and enter state 151
	upper_word     shift, and enter state 83
	lower_word     shift, and enter state 19
	signed_integer shift, and enter state 84
	unsigned_integershift, and enter state 85
	real           shift, and enter state 86

	'variable'     goto state 143
	'general_term' goto state 187
	'general_data' goto state 146
	'formula_data' goto state 147
	'general_terms'goto state 203
	'atomic_word'  goto state 148
	'number'       goto state 149

State 199

	'general_list' -> lbra 'general_terms' . rbra       (rule 106)

	rbra           shift, and enter state 202


State 200

	'general_list' -> lbra rbra .                       (rule 105)

	rp             reduce using rule 105


State 201

	'quantified_formula' -> 'quantifier' lbra 'variable_list' rbra colon 'unitary_formula' .    (rule 26)

	rp             reduce using rule 26
	comma          reduce using rule 26
	iff            reduce using rule 26
	implies        reduce using rule 26
	xor            reduce using rule 26
	nor            reduce using rule 26
	nand           reduce using rule 26
	impliedby      reduce using rule 26
	ampersand      reduce using rule 26
	vline          reduce using rule 26


State 202

	'general_list' -> lbra 'general_terms' rbra .       (rule 106)

	rp             reduce using rule 106


State 203

	'general_terms' -> 'general_term' comma 'general_terms' .    (rule 108)

	rp             reduce using rule 108
	rbra           reduce using rule 108


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 128
Number of terminals: 35
Number of non-terminals: 75
Number of states: 204
